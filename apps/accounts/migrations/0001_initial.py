# Generated by Django 4.1.2 on 2022-11-13 12:17

# Core imports.
import django.utils.timezone
from django.db import models, migrations

# Local imports.
import apps.accounts.managers
import apps.common.validators.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerificationCodeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('ip', models.GenericIPAddressField(default='1.1.1.1')),
                ('code', models.CharField(max_length=5)),
                (
                    'phone_number',
                    models.CharField(max_length=12, validators=[apps.common.validators.models.phone_number_validator]),
                ),
            ],
            options={
                'verbose_name': 'verification code',
                'verbose_name_plural': 'verification codes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deleted', models.BooleanField(default=False, editable=False)),
                (
                    'username',
                    models.CharField(
                        error_messages={'unique': 'A user with that username already exists.'},
                        max_length=11,
                        unique=True,
                        validators=[apps.common.validators.models.phone_number_validator],
                        verbose_name='username',
                    ),
                ),
                (
                    'national_code',
                    models.CharField(
                        blank=True,
                        max_length=10,
                        validators=[apps.common.validators.models.national_code_validator],
                        verbose_name='national code',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True,
                        max_length=150,
                        validators=[apps.common.validators.models.persian_character_validator],
                        verbose_name='first name',
                    ),
                ),
                (
                    'last_name',
                    models.CharField(
                        blank=True,
                        max_length=150,
                        validators=[apps.common.validators.models.persian_character_validator],
                        verbose_name='last name',
                    ),
                ),
                ('full_name', models.CharField(blank=True, max_length=300, verbose_name='full name')),
                (
                    'birthdate',
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[apps.common.validators.models.birthdate_validator],
                        verbose_name='birthdate',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', apps.accounts.managers.UserManager()),
            ],
        ),
    ]
